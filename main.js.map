{"version":3,"sources":["node-fetch (ignored)","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)","./src/environments/environment.ts","./src/app/components/search/wiki.service.ts","./src/app/components/question/question.component.ts","./src/app/components/question/question.component.html","./src/app/components/answer/answer.component.ts","./src/app/components/answer/answer.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {SearchResult} from './search-result.interface';\nimport {Page} from './page.interface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WikiService {\n  constructor(private http: HttpClient) {\n  }\n\n  public search(searchTerm: string): Observable<SearchResult[]> {\n    const url = `https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch=${encodeURI(searchTerm)}&utf8=&format=json&origin=*`;\n    return this.http.get(url)\n      .pipe(\n        map((response: any) => response.query.search)\n      );\n  }\n\n  public getPageContent(pageId: number): Observable<Page> {\n    const url = `https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=extracts&exintro&explaintext&redirects=1&pageids=${encodeURI(pageId.toString())}`;\n    return this.http.get(url)\n      .pipe(\n        map((response: any) => {\n          if (pageId in response.query.pages) {\n            return response.query.pages[pageId];\n          }\n        })\n      );\n  }\n}\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent {\n  @Output() askedQuestion: EventEmitter<any> = new EventEmitter();\n\n  public question = '';\n\n  updateQuestion(): void {\n    this.askedQuestion.emit(this.question);\n  }\n\n  resetQuestion(): void {\n    this.question = '';\n    this.askedQuestion.emit(this.question);\n  }\n}\n","<mat-form-field>\n  <mat-label>Ask a question on the selected text</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"question\" (keyup)=\"updateQuestion()\">\n  <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n          *ngIf=\"question\"\n          (click)=\"resetQuestion()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport * as tf from '@tensorflow/tfjs';\nimport * as qna from '@tensorflow-models/qna';\nimport {Observable, Subscription} from 'rxjs';\nimport {PredictData} from './predict-data.interface';\nimport {Answer} from './answer.interface';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.scss']\n})\nexport class AnswerComponent implements OnInit, OnDestroy {\n  @Input() question = '';\n  @Input() text = '';\n  @Input() predict: Observable<PredictData> = new Observable<PredictData>();\n\n  public answer = '';\n  public predictions: Answer[] = [];\n\n  private subscription: Subscription = new Subscription();\n\n  async ngOnInit(): Promise<void> {\n    await tf.setBackend('webgl');\n    this.subscription = this.predict.subscribe((data) => this.predictAnswer(data));\n  }\n\n  async predictAnswer(data: any): Promise<void> {\n    console.log('Using TensorFlow backend: ', tf.getBackend());\n    this.answer = '';\n    this.predictions = [];\n    const model = await qna.load();\n    const predictions = await model.findAnswers(data.question, data.text);\n\n    if (predictions.length > 0) {\n      this.answer = predictions[0].text;\n      this.predictions = predictions;\n    } else {\n      this.answer = 'I am sorry my responses are limited. You must ask the right questions.';\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<h3>Predictions:</h3>\n<div *ngIf=\"answer\">\n  <h5>Best match</h5>\n  <p>{{answer}}</p>\n\n  <h5 *ngIf=\"predictions.length > 0\">All Predictions</h5>\n  <mat-list role=\"list\">\n    <mat-list-item role=\"listitem\" *ngFor=\"let prediction of predictions\">\n      <div mat-line>Answer: {{prediction.text}}</div>\n      <div mat-line>Score: {{prediction.score}}</div>\n    </mat-list-item>\n  </mat-list>\n</div>\n\n<mat-spinner *ngIf=\"answer === ''\"></mat-spinner>\n\n","import {Component, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {WikiService} from './wiki.service';\nimport {SearchResult} from './search-result.interface';\nimport {Observable, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnDestroy {\n  @Output() selectedText: EventEmitter<any> = new EventEmitter();\n\n  public selectedPageId = 0;\n  public searchResults$: Observable<SearchResult[]> = new Observable<SearchResult[]>();\n  public searchValue = '';\n  public pageContent = '';\n\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private wikiService: WikiService\n  ) { }\n\n  public searchPages(): void {\n    this.searchResults$ = this.wikiService.search(this.searchValue);\n  }\n\n  public getPageContent(pageId: number): void {\n    this.subscription = this.wikiService.getPageContent(pageId)\n      .subscribe(page => {\n        if (page) {\n          const text = page.extract;\n          this.pageContent = text;\n          this.selectedPageId = page.pageid;\n\n          this.onTextChange(text);\n        } else {\n          this.resetPageProperties();\n          this.onTextChange('');\n        }\n      });\n  }\n\n  public onTextChange(text: string): void {\n    this.selectedText.emit(text);\n  }\n\n  public resetSearch(): void {\n    this.searchValue = '';\n    this.searchResults$ = new Observable<SearchResult[]>();\n    this.resetPageProperties();\n  }\n\n  private resetPageProperties(): void {\n    this.pageContent = '';\n    this.selectedPageId = 0;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-form-field>\n  <mat-label>Search for Pages on Wikipedia</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"searchValue\" (keyup)=\"searchPages()\">\n  <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n          *ngIf=\"searchValue\"\n          (click)=\"resetSearch(); onTextChange('')\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n\n<div class=\"page--results\" *ngIf=\"searchResults$ | async as searchResults\">\n  <mat-card>\n    <mat-card-content>\n      <mat-list role=\"list\">\n        <div mat-subheader>Pages</div>\n        <mat-list-item *ngFor=\"let result of searchResults\"\n                       class=\"list-item\"\n                       [class.page--selected]=\"result.pageid === selectedPageId\"\n                       (click)=\"getPageContent(result.pageid)\">\n          <mat-icon mat-list-icon>note</mat-icon>\n          <div mat-line>{{result.title}}</div>\n          <div mat-line>{{result.timestamp | date}}</div>\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Selected Page Content</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <ng-container *ngIf=\"pageContent;else hint\">\n        {{pageContent}}\n      </ng-container>\n      <ng-template #hint>Please select a page on the left...</ng-template>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import {Component} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {PredictData} from './components/answer/predict-data.interface';\nimport {StepperSelectionEvent} from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public text = '';\n  public isFirstStepCompleted = false;\n  public question = '';\n  public isSecondStepCompleted = false;\n\n  private LAST_STEP = 2;\n\n  predictAnswer: Subject<PredictData> = new Subject<PredictData>();\n\n  public setText(text: string): void {\n    this.text = text;\n    this.isFirstStepCompleted = (text !== '');\n  }\n\n  public setQuestion(question: string): void {\n    this.question = question;\n    this.isSecondStepCompleted = (question !== '');\n  }\n\n  public predict(): void {\n    if (this.question !== '' && this.text !== '') {\n      this.predictAnswer.next({question: this.question, text: this.text});\n    }\n  }\n\n  public checkSelectedStep(some: StepperSelectionEvent): void {\n    if (some.selectedIndex === this.LAST_STEP) {\n      this.predict();\n    }\n  }\n}\n","<mat-toolbar>\n  <span>Tensorflow and Angular</span>\n</mat-toolbar>\n\n<main>\n  <mat-horizontal-stepper linear (selectionChange)=\"checkSelectedStep($event)\">\n    <mat-step label=\"Select content\" [completed]=\"isFirstStepCompleted\">\n      <app-search (selectedText)=\"setText($event)\"></app-search>\n    </mat-step>\n    <mat-step label=\"Ask a question\" [completed]=\"isSecondStepCompleted\">\n      <app-question (askedQuestion)=\"setQuestion($event)\"></app-question>\n    </mat-step>\n    <mat-step label=\"Check the answer\">\n      <app-answer\n        [predict]=\"predictAnswer.asObservable()\"\n      ></app-answer>\n    </mat-step>\n  </mat-horizontal-stepper>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { AnswerComponent } from './components/answer/answer.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    QuestionComponent,\n    AnswerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}